#define ENB   D6          // Enable/speed motors Left         GPIO12(D6)
#define IN_3  D4           // L298N in3 motors Left            GPIO2(D4)
#define IN_4  D3          // L298N in4 motors Left            GPIO0(D3)
#define COMPASS_IN1 D8
#define COMPASS_IN2 D7
#include <Wire.h>
#include <LSM303.h>

LSM303 compass;
void setupMotor()
{
 pinMode(ENB, OUTPUT);  
 pinMode(IN_3, OUTPUT);
 pinMode(IN_4, OUTPUT); 
}
void setupCompass()
{
  Wire.begin();
  compass.init();
  compass.enableDefault();
  pinMode(COMPASS_IN1, OUTPUT);
  pinMode(COMPASS_IN2, OUTPUT);
  digitalWrite(COMPASS_IN1, HIGH);
  digitalWrite(COMPASS_IN2, HIGH);
  compass.m_min = (LSM303::vector<int16_t>){-32767, -32767, -32767};
  compass.m_max = (LSM303::vector<int16_t>){+32767, +32767, +32767};
}
void setup() 
{
 Serial.begin(115200);
 setupMotor();
 setupCompass();
}
int speedCar = 400;
void stopRobot(){  
      digitalWrite(IN_3, LOW);
      digitalWrite(IN_4, LOW);
      analogWrite(ENB, speedCar);
 }
void goAhead(){ 
      digitalWrite(IN_3, LOW);
      digitalWrite(IN_4, HIGH);
      analogWrite(ENB, speedCar);
      }
void goBack(){ 
      digitalWrite(IN_3, HIGH);
      digitalWrite(IN_4, LOW);
      analogWrite(ENB, speedCar);
  }
void goRight(){
      digitalWrite(IN_3, LOW);
      digitalWrite(IN_4, HIGH);
      analogWrite(ENB, speedCar);
  }
 void goLeft(){
      digitalWrite(IN_3, HIGH);
      digitalWrite(IN_4, LOW);
      analogWrite(ENB, speedCar);
  }
float readHeading()
{
  compass.read();
  float heading = compass.heading();
  return heading;
}
void loop()
{
  goAhead();
  float heading = readHeading();
  Serial.println(heading);
}